<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="newMangaPB.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YAB//9k=
</value>
  </data>
</root>